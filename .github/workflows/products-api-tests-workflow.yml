# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven for Products API Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Test Execution
        run: mvn -B -f pom.xml clean test

      #      - name: Find latest report
      #        id: find-latest-report
      #        run: |
      #          #find latest extent report, sorted with current executed and assign results to latestReport
      #          latestReport=$(ls -t reports/* | head -n 1)
      #          # Debugging line to show the report in the logs
      #          echo "Latest Report: $latestReport"
      #          echo "::set-output name=latestReport::$latestReport"

      # find latest extent report and upload its artifact
      - name: upload latest extent report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latest-extent-report
          path: ./reports/*.html

        # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
